package TrabalhoAgentes;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.awt.event.*;
import javax.swing.*;
import java.awt.geom.AffineTransform;


import javax.swing.JFrame;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.Timer;



public class pnPrincipal extends JPanel implements ActionListener {

    private static final long serialVersionUID = 1L;
    private ArrayList<Player> bots;
    private ArrayList<Boundary> walls;
    public AffineTransform transform;
    private String[][] map;

    static int yOffset = 25;
    static int stWidth = 12;
    static int stHeight =12;

    private JButton button;

    public pnPrincipal() {
        walls = new ArrayList<Boundary>();
        bots = new ArrayList<Player>();
        transform = new AffineTransform();
        
        Timer timer = new Timer(10, this);
        timer.start();
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        button = new JButton("Button");
        add(button);
        button.addActionListener(this);
        add(Box.createVerticalGlue());

        map = new String[][] 
        // {{"3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3"},
        //  {"3", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"},
        //  {"3", "-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "-"},
        //  {"1", "-", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", "l", " ", " ", "-"},
        //  {"3", "-", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-"},
        //  {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        //  {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        //  {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        //  {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        //  {"3", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        //  {"3", "-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "-"},
        //  {"1", "-", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "=", " ", "=", " ", "=", " ", " ", " ", "-"},
        //  {"3", "-", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", "-"},
        //  {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-"},
        //  {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        //  {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        //  {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        //  {"3", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        //  {"3", "-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "u", " ", "-"},
        //  {"1", "-", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", " ", "-"},
        //  {"3", "-", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-"},
        //  {"3", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"}};
        
        {{"3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3", "3", "3", "3", "3", "3", "1", "3", "3"},
        {"3", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"},
        {"3", "-", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", "-"},
        {"1", "-", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", "r", "=", " ", "=", " ", "=", " ", " ", " ", "-"},
        {"3", "-", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", " ", " ", " ", " ", " ", " ", "d", " ", "-"},
        {"3", "-", "r", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-", "-", "-", "-", "-", " ", "|", "l", "-"},
        {"3", "-", " ", "u", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-"},
        {"1", "-", " ", " ", "r", "=", " ", "=", " ", "=", "l", " ", "r", "=", " ", "=", " ", "=", "l", " ", "r", "=", " ", "=", " ", "=", "l", " ", "r", "=", " ", "=", " ", "=", "l", " ", "r", "=", " ", "=", " ", "=", "l", " ", " ", "-"},
        {"3", "-", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", "d", " ", "u", " ", " ", " ", " ", " ", "d", " ", "-"},
        {"3", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", "r", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-"},
        {"3", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-", "-", "-", "-", "-", " ", " ", " ", "-"},
        {"3", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", " ", "-", "-", "-", "-", "-", " ", "|", "l", "-"},
        {"3", "-", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-"},
        {"1", "-", " ", " ", " ", "=", " ", "=", " ", "=", "l", " ", " ", "=", " ", "=", " ", "=", "l", " ", " ", "=", " ", "=", " ", "=", "l", " ", " ", "=", " ", "=", " ", "=", "l", " ", " ", "=", " ", "=", " ", "=", "l", " ", " ", "-"},
        {"3", "-", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "u", " ", " ", " ", " ", " ", " ", " ", "-"},
        {"3", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"}};

        
        
        createWalls(map);
    }

    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;

        g2d.setColor(Color.BLACK); //background
        g2d.fillRect(0, yOffset, getWidth(), getHeight()-yOffset);

        for (Boundary wall : walls) { 
            //if(wall.getType()!="r"&&wall.getType()!="l"&&wall.getType()!="u"&&wall.getType()!="d"){
                g2d.setColor(wall.getColor());
                g2d.fillRect(wall.getPositionX(), wall.getPositionY(),
                wall.getWidth() , wall.getHeight());}
        //}

        for (Player bot : bots) { 
            g2d.setColor(bot.getColor());
            //g2d.transform(transform);
            g2d.fillRect((int) bot.getPositionX(), (int) bot.getPositionY(), bot.getWidth(), bot.getHeight());
            g2d.setColor(Color.WHITE);
            g2d.fillRect((int) bot.getPositionX(), (int) bot.getPositionY(), 10, 10);

        }
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(button)) {  
            bots.add(new Player(this, stWidth*10 , yOffset + stHeight*7.5  , stWidth*3, stHeight*2, 1));
            bots.add(new Player(this, stWidth*50 , yOffset + stHeight*7.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*70 , yOffset + stHeight*3.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*100 , yOffset + stHeight*3.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*10 , yOffset + stHeight*25.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*50 , yOffset + stHeight*25.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*100 , yOffset + stHeight*25.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*110 , yOffset + stHeight*25.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*10 , yOffset + stHeight*47.5  , stWidth*3, stHeight*2, 1));
            // bots.add(new Player(this, stWidth*50 , yOffset + stHeight*47.5  , stWidth*3, stHeight*2, 1));
            //bots.add(new Player(this, stWidth*100 , yOffset + stHeight*47.5  , stWidth*3, stHeight*2, 1));

            // for (Player bot : bots) {
                
            // }            
        }

         for (Player a: this.bots) {
            a.execute();
        }

        //repaint();
    }
    
    private int totalBWidth=0;
    private int totalBHeight=0;
    public void createWalls(String[][] mp){
        int colWidth = 0;
        int rowHeight = 0;
        for (int row=1;row<mp.length;row++) {
        totalBHeight+=rowHeight;
        rowHeight=stWidth*Integer.parseInt(mp[row][0]);
           for (int col=1;col<mp[row].length;col++) {
            totalBWidth+=colWidth;
            colWidth=stHeight*Integer.parseInt(mp[0][col]);
                switch(mp[row][col]){
                    case " ":
                    break;
                    case "-":
                    walls.add(new Boundary("wall", totalBWidth, yOffset + totalBHeight, Color.GRAY, rowHeight, colWidth));
                    break;
                    case "=":
                    walls.add(new Boundary("lineH", totalBWidth, yOffset + totalBHeight, Color.YELLOW, rowHeight, colWidth));
                    break;
                    case "|":
                    walls.add(new Boundary("lineV", totalBWidth, yOffset + totalBHeight, Color.YELLOW, rowHeight, colWidth));
                    break;
                    default:
                    walls.add(new Boundary(mp[row][col], totalBWidth, yOffset + totalBHeight, Color.DARK_GRAY, rowHeight, colWidth));
                    break;
                }
           }
        totalBWidth=0;
        colWidth = 0;
        }
    }

    public ArrayList<Boundary> getWalls(String f) {
        ArrayList<Boundary> filtro = new ArrayList<Boundary>();
        for (Boundary b : walls) {
            if (b.getType().contains(f)) 
                filtro.add(b);
        }
        return filtro;
    }

    public int getyOffset() {
        return yOffset;
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Trânsito de Xaxim");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pnPrincipal panel = new pnPrincipal();
        frame.add(panel);
        
        frame.add(panel);
        frame.setSize(800, 500);
        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        frame.setVisible(true);
    }
}
